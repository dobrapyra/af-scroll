{"mappings":"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","sources":["dist/src/helpers.js","dist/src/index.js","src/docs/js/smooth.js"],"sourcesContent":["/**\n * lerp\n * @param {Array} arr array or other iterable collection\n * @param {Function} cb callback function for each array element\n */\nexport function each(arr, cb) {\n  const l = arr.length;\n  for (let i = 0; i < l; i++) {\n    const result = cb(arr[i], i, arr);\n    if (result === true) continue;\n    if (result === false) break;\n  }\n}\n\n/**\n * lerp\n * @param {Number} begin begin value\n * @param {Number} end end value\n * @param {Number} factor in range 0.0 - 1.0\n * @returns interpolated value\n */\nexport function lerp(begin, end, factor) {\n  return begin + ((end - begin) * factor);\n}\n\n/**\n * style\n * @param {Element} el\n * @param {Object} styles\n */\nexport function style(el, styles) {\n  Object.keys(styles).forEach(styleKey => {\n    el.style[styleKey] = styles[styleKey];\n  });\n}\n\nexport default {\n  each,\n  lerp,\n  style,\n};","import { each, lerp, style } from './helpers';\n\n/**\n * AFScroll (Animation Frame Scroll)\n * @param {Object} options general options\n * @property {Number} smoothForce smoothing force in range 0.0 - 1.0, 0: no smooth, 1: no scroll\n * @property {Number} smoothLimit min diff between current and target value to keep smooth loop\n * @property {Element} scrollEl static scroll wrapper element\n * @property {String} className css class name of scroll wrapper element\n * @property {String} wrapExclude css selector to exclude from wrapping\n * @property {Number} autoHeight height checking period in frames, 1: each frame, 0: disabled\n * @property {Function} onUpdate callback function triggered on scroll update\n * @property {Function} onComplete callback function triggered after smooth loop stopped\n */\nexport default function createAFScroll({\n  smoothForce: smoothForceArg = 0.8,\n  smoothLimit: smoothLimitArg = 0.2,\n  scrollEl: scrollElArg = null,\n  className: classNameArg = 'afScroll',\n  wrapExclude: wrapExcludeArg = 'script, link',\n  autoHeight: autoHeightArg = 12,\n  onUpdate: onUpdateArg = () => {},\n  onComplete: onCompleteArg = () => {}\n} = {}) {\n  const smoothFactor = 1 - smoothForceArg;\n  const smoothLimit = smoothLimitArg;\n  const staticScrollEl = scrollElArg;\n  const className = classNameArg;\n  const wrapExclude = wrapExcludeArg;\n  const autoHeight = autoHeightArg;\n  const onUpdate = onUpdateArg;\n  const onComplete = onCompleteArg;\n\n  let targetScroll = 0;\n  let lastScroll = 0;\n  let forcedScroll = null;\n  let lockedScroll = null;\n  let smoothRaf = null;\n  let heightRaf = null;\n\n  const bodyEl = document.getElementsByTagName('body')[0];\n  let scrollEl = null;\n  let autoHeightFrame = 0;\n  let lastHeight = null;\n\n  /**\n   * create scroll wrapper element\n   */\n  function createScroll() {\n    scrollEl = staticScrollEl !== null\n      ? staticScrollEl\n      : document.createElement('div');\n    style(scrollEl, {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n    });\n\n    if (staticScrollEl !== null) return;\n\n    scrollEl.setAttribute('class', className);\n\n    const childrenArr = [];\n    each(bodyEl.children, childEl => {\n      if (childEl === scrollEl || childEl.matches(wrapExclude)) return true;\n      childrenArr.push(childEl);\n    });\n    each(childrenArr, childEl => {\n      scrollEl.appendChild(childEl);\n    });\n    bodyEl.insertBefore(scrollEl, bodyEl.children[0]);\n  }\n\n  /**\n   * remove scroll wrapper element\n   */\n  function removeScroll() {\n    style(bodyEl, { height: '' });\n    autoHeightFrame = 0;\n    lastHeight = null;\n\n    if (staticScrollEl !== null) {\n      style(scrollEl, {\n        position: '',\n        top: '',\n        left: '',\n        width: '',\n        height: '',\n        overflow: '',\n      });\n      scrollEl = null;\n\n      return;\n    }\n\n    const childrenArr = [];\n    each(scrollEl.children, childEl => {\n      childrenArr.push(childEl);\n    });\n    each(childrenArr, childEl => {\n      bodyEl.insertBefore(childEl, scrollEl);\n    });\n    bodyEl.removeChild(scrollEl);\n    scrollEl = null;\n  }\n\n  /**\n   * setNativeScroll\n   * @param {Number} scroll scrollTop value\n   */\n  function setNativeScroll(scroll) {\n    document.body.scrollTop = document.documentElement.scrollTop = scroll;\n  }\n\n  /**\n   * scrollTo\n   * @public\n   * @param {Number} scroll scrollTop value\n   * @param {Boolean} force prevents user from changing a scroll target\n   */\n  function scrollTo(scroll, force = false) {\n    if (force) forcedScroll = scroll;\n\n    setNativeScroll(scroll);\n  }\n\n  /**\n   * free forced scroll\n   * @public\n   */\n  function free() {\n    forcedScroll = null;\n  }\n\n  /**\n   * lock scroll\n   * @public\n   */\n  function lock() {\n    lockedScroll = lastScroll;\n  }\n\n  /**\n   * unlock scroll\n   * @public\n   */\n  function unlock() {\n    lockedScroll = null;\n  }\n\n  function updateScroll(scroll) {\n    lastScroll = scroll;\n    scrollEl.scrollTop = scroll;\n    onUpdate(scroll);\n  }\n\n  function smoothUpdate() {\n    if (lockedScroll !== null) return;\n\n    if (Math.abs(targetScroll - lastScroll) < smoothLimit) {\n      updateScroll(targetScroll);\n      free();\n      onComplete(targetScroll);\n      return;\n    }\n\n    updateScroll(lerp(lastScroll, targetScroll, smoothFactor));\n\n    smoothRaf = requestAnimationFrame(smoothUpdate);\n  }\n\n  function onScroll() {\n    if (lockedScroll !== null) setNativeScroll(lockedScroll);\n    else if (forcedScroll !== null) setNativeScroll(forcedScroll);\n\n    targetScroll = window.scrollY;\n\n    cancelAnimationFrame(smoothRaf);\n    smoothRaf = requestAnimationFrame(smoothUpdate);\n  }\n\n  function breakSmoothLoop() {\n    cancelAnimationFrame(smoothRaf);\n  }\n\n  function autoHeightUpdate() {\n    if (++autoHeightFrame >= autoHeight) {\n      autoHeightFrame = 0;\n      updateHeight();\n    }\n\n    heightRaf = requestAnimationFrame(autoHeightUpdate);\n  }\n\n  function startAutoHeight() {\n    if (autoHeight === 0 || autoHeight === false) return;\n\n    heightRaf = requestAnimationFrame(autoHeightUpdate);\n  }\n\n  function stopAutoHeight() {\n    cancelAnimationFrame(heightRaf);\n  }\n\n  function updateHeight() {\n    const scrollHeight = scrollEl.scrollHeight;\n    if (scrollHeight === lastHeight) return;\n\n    lastHeight = scrollHeight;\n    style(bodyEl, {\n      height: `${scrollHeight}px`,\n    });\n  }\n\n  function onResize() {\n    updateHeight();\n    updateHeight(); // double to fix some size issues\n  }\n\n  function bindEvents() {\n    window.addEventListener('scroll', onScroll);\n    window.addEventListener('resize', onResize);\n  }\n\n  function unbindEvents() {\n    window.removeEventListener('scroll', onScroll);\n    window.removeEventListener('resize', onResize);\n  }\n\n  /**\n   * initialize AFScroll\n   * @public\n   */\n  function init() {\n    if (scrollEl !== null) return;\n\n    targetScroll = window.scrollY;\n    createScroll();\n    onResize();\n\n    setNativeScroll(targetScroll);\n    updateScroll(targetScroll);\n\n    bindEvents();\n    startAutoHeight();\n  }\n\n  /**\n   * destroy AFScroll\n   * @public\n   */\n  function destroy() {\n    if (scrollEl === null) return;\n\n    breakSmoothLoop();\n    stopAutoHeight();\n    unbindEvents();\n    removeScroll();\n\n    forcedScroll = null;\n    lockedScroll = null;\n  }\n\n  init();\n\n  return {\n    init,\n    scrollTo,\n    free,\n    lock,\n    unlock,\n    destroy,\n  };\n}\n","import createAFScroll from '../../../dist/esmodule';\n\n(function(){\n  // AFScroll\n  const afScroll = createAFScroll({\n    smoothForce: 0.95,\n  });\n\n  [\n    { selector: '[data-scroll-top]', cb: () => { afScroll.scrollTo(0); } },\n    { selector: '[data-scroll-top-force]', cb: () => { afScroll.scrollTo(0, true); } },\n    { selector: '[data-destroy]', cb: () => { afScroll.destroy(); } },\n    { selector: '[data-reinit]', cb: () => { afScroll.init(); } },\n    { selector: '[data-lock]', cb: () => { afScroll.lock(); } },\n    { selector: '[data-unlock]', cb: () => { afScroll.unlock(); } },\n  ].map(({ selector, cb }) => {\n    const button = document.querySelector(selector);\n    button.addEventListener('click', cb);\n  })\n})();"],"names":["$b48aee95bbc055ea$var$$927e8cf0f6fe9586$export$79b2f7037acddd43","arr","cb","l","length","i","result","$b48aee95bbc055ea$var$$927e8cf0f6fe9586$export$3a89f8d6f6bf6c9f","begin","end","factor","$b48aee95bbc055ea$var$$927e8cf0f6fe9586$export$1d567c320f4763bc","el","styles","Object","keys","forEach","styleKey","style","$b48aee95bbc055ea$export$2e2bcd8739ae039","smoothForce","smoothForceArg","smoothLimit","smoothLimitArg","scrollEl","scrollElArg","className","classNameArg","wrapExclude","wrapExcludeArg","autoHeight","autoHeightArg","onUpdate","onUpdateArg","onComplete","onCompleteArg","smoothFactor","staticScrollEl","targetScroll","lastScroll","forcedScroll","lockedScroll","smoothRaf","heightRaf","bodyEl","document","getElementsByTagName","autoHeightFrame","lastHeight","setNativeScroll","scroll","body","scrollTop","documentElement","free","updateScroll","smoothUpdate","Math","abs","requestAnimationFrame","onScroll","window","scrollY","cancelAnimationFrame","autoHeightUpdate","updateHeight","scrollHeight","height","onResize","init","createElement","position","top","left","width","overflow","setAttribute","childrenArr","children","childEl","matches","push","appendChild","insertBefore","createScroll","addEventListener","scrollTo","force","lock","unlock","destroy","removeEventListener","removeChild","removeScroll","afScroll","selector","map","querySelector"],"version":3,"file":"smooth.3d94acd2.js.map"}