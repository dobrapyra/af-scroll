{"mappings":"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","sources":["src/index.js","src/helpers.js"],"sourcesContent":["import { each, lerp, style } from './helpers';\n\n/**\n * AFScroll (Animation Frame Scroll)\n * @param {Object} options general options\n * @property {Number} smoothForce smoothing force in range 0.0 - 1.0, 0: no smooth, 1: no scroll\n * @property {Number} smoothLimit min diff between current and target value to keep smooth loop\n * @property {Element} scrollEl static scroll wrapper element\n * @property {String} className css class name of scroll wrapper element\n * @property {String} wrapExclude css selector to exclude from wrapping\n * @property {Number} autoHeight height checking period in frames, 1: each frame, 0: disabled\n * @property {Function} onUpdate callback function triggered on scroll update\n * @property {Function} onComplete callback function triggered after smooth loop stopped\n */\nexport default function createAFScroll({\n  smoothForce: smoothForceArg = 0.8,\n  smoothLimit: smoothLimitArg = 0.2,\n  scrollEl: scrollElArg = null,\n  className: classNameArg = 'afScroll',\n  wrapExclude: wrapExcludeArg = 'script, link',\n  autoHeight: autoHeightArg = 12,\n  onUpdate: onUpdateArg = () => {},\n  onComplete: onCompleteArg = () => {}\n} = {}) {\n  const smoothFactor = 1 - smoothForceArg;\n  const smoothLimit = smoothLimitArg;\n  const staticScrollEl = scrollElArg;\n  const className = classNameArg;\n  const wrapExclude = wrapExcludeArg;\n  const autoHeight = autoHeightArg;\n  const onUpdate = onUpdateArg;\n  const onComplete = onCompleteArg;\n\n  let targetScroll = 0;\n  let lastScroll = 0;\n  let lockedScroll = null;\n  let smoothRaf = null;\n  let heightRaf = null;\n\n  const bodyEl = document.getElementsByTagName('body')[0];\n  let scrollEl = null;\n  let autoHeightFrame = 0;\n  let lastHeight = null;\n\n  /**\n   * create scroll wrapper element\n   */\n  function createScroll() {\n    scrollEl = staticScrollEl !== null\n      ? staticScrollEl\n      : document.createElement('div');\n    style(scrollEl, {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n    });\n\n    if (staticScrollEl !== null) return;\n\n    scrollEl.setAttribute('class', className);\n\n    const childrenArr = [];\n    each(bodyEl.children, childEl => {\n      if (childEl === scrollEl || childEl.matches(wrapExclude)) return true;\n      childrenArr.push(childEl);\n    });\n    each(childrenArr, childEl => {\n      scrollEl.appendChild(childEl);\n    });\n    bodyEl.insertBefore(scrollEl, bodyEl.children[0]);\n  }\n\n  /**\n   * remove scroll wrapper element\n   */\n  function removeScroll() {\n    style(bodyEl, { height: '' });\n    autoHeightFrame = 0;\n    lastHeight = null;\n\n    if (staticScrollEl !== null) {\n      style(scrollEl, {\n        position: '',\n        top: '',\n        left: '',\n        width: '',\n        height: '',\n        overflow: '',\n      });\n      scrollEl = null;\n\n      return;\n    }\n\n    const childrenArr = [];\n    each(scrollEl.children, childEl => {\n      childrenArr.push(childEl);\n    });\n    each(childrenArr, childEl => {\n      bodyEl.insertBefore(childEl, scrollEl);\n    });\n    bodyEl.removeChild(scrollEl);\n    scrollEl = null;\n  }\n\n  /**\n   * scrollTo\n   * @public\n   * @param {Number} scroll scroll value\n   */\n  function scrollTo(scroll) {\n    document.body.scrollTop = document.documentElement.scrollTop = scroll;\n  }\n\n  /**\n   * lock scroll\n   * @public\n   */\n  function lock() {\n    lockedScroll = lastScroll;\n  }\n\n  /**\n   * unlock scroll\n   * @public\n   */\n  function unlock() {\n    lockedScroll = null;\n  }\n\n  function updateScroll(scroll) {\n    lastScroll = scroll;\n    scrollEl.scrollTop = scroll;\n    onUpdate(scroll);\n  }\n\n  function smoothUpdate() {\n    if (lockedScroll !== null) return;\n\n    if (Math.abs(targetScroll - lastScroll) < smoothLimit) {\n      updateScroll(targetScroll);\n      onComplete(targetScroll);\n      return;\n    }\n\n    updateScroll(lerp(lastScroll, targetScroll, smoothFactor));\n\n    smoothRaf = requestAnimationFrame(smoothUpdate);\n  }\n\n  function onScroll() {\n    if (lockedScroll !== null) scrollTo(lockedScroll);\n\n    targetScroll = window.scrollY;\n\n    cancelAnimationFrame(smoothRaf);\n    smoothRaf = requestAnimationFrame(smoothUpdate);\n  }\n\n  function breakSmoothLoop() {\n    cancelAnimationFrame(smoothRaf);\n  }\n\n  function autoHeightUpdate() {\n    if (++autoHeightFrame >= autoHeight) {\n      autoHeightFrame = 0;\n      updateHeight();\n    }\n\n    heightRaf = requestAnimationFrame(autoHeightUpdate);\n  }\n\n  function startAutoHeight() {\n    if (autoHeight === 0 || autoHeight === false) return;\n\n    heightRaf = requestAnimationFrame(autoHeightUpdate);\n  }\n\n  function stopAutoHeight() {\n    cancelAnimationFrame(heightRaf);\n  }\n\n  function updateHeight() {\n    const scrollHeight = scrollEl.scrollHeight;\n    if (scrollHeight === lastHeight) return;\n\n    lastHeight = scrollHeight;\n    style(bodyEl, {\n      height: `${scrollHeight}px`,\n    });\n  }\n\n  function onResize() {\n    updateHeight();\n    updateHeight(); // double to fix some size issues\n  }\n\n  function bindEvents() {\n    window.addEventListener('scroll', onScroll);\n    window.addEventListener('resize', onResize);\n  }\n\n  function unbindEvents() {\n    window.removeEventListener('scroll', onScroll);\n    window.removeEventListener('resize', onResize);\n  }\n\n  /**\n   * initialize AFScroll\n   * @public\n   */\n  function init() {\n    if (scrollEl !== null) return;\n\n    targetScroll = window.scrollY;\n    createScroll();\n    onResize();\n\n    scrollTo(targetScroll);\n    updateScroll(targetScroll);\n\n    bindEvents();\n    startAutoHeight();\n  }\n\n  /**\n   * destroy AFScroll\n   * @public\n   */\n  function destroy() {\n    if (scrollEl === null) return;\n\n    breakSmoothLoop();\n    stopAutoHeight();\n    unbindEvents();\n    removeScroll();\n\n    lockedScroll = null;\n  }\n\n  init();\n\n  return {\n    init,\n    scrollTo,\n    lock,\n    unlock,\n    destroy,\n  };\n}\n","/**\n * lerp\n * @param {Array} arr array or other iterable collection\n * @param {Function} cb callback function for each array element\n */\nexport function each(arr, cb) {\n  const l = arr.length;\n  for (let i = 0; i < l; i++) {\n    const result = cb(arr[i], i, arr);\n    if (result === true) continue;\n    if (result === false) break;\n  }\n}\n\n/**\n * lerp\n * @param {Number} begin begin value\n * @param {Number} end end value\n * @param {Number} factor in range 0.0 - 1.0\n * @returns interpolated value\n */\nexport function lerp(begin, end, factor) {\n  return begin + ((end - begin) * factor);\n}\n\n/**\n * style\n * @param {Element} el\n * @param {Object} styles\n */\nexport function style(el, styles) {\n  Object.keys(styles).forEach(styleKey => {\n    el.style[styleKey] = styles[styleKey];\n  });\n}\n\nexport default {\n  each,\n  lerp,\n  style,\n};"],"names":[],"version":3,"file":"commonjs.js.map","sourceRoot":"../"}